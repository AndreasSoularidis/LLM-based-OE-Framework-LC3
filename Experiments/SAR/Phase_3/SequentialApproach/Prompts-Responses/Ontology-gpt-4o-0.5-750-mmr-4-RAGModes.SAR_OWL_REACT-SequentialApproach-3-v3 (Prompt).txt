
    Create three instances of yourself playing three different roles in the ontology engineering process
    based on the HCOME collaborative ontology engineering methodology. 
    The three roles are the knowledge engineer, the domain expert and the knowledge worker. 
    These three roles work together to create an ontology. The Knowledge Engineer is responsible 
    for the requirements specification, conceptualisation and generation of the ontology. The Domain 
    Expert is an experienced person and provides the requirements for the 
    ontology, terminology, definitions of terms, domain specific explanations of terms and his 
    experience in general. The Knowledge Worker is the user of the ontology 
    and actively participates in the ontology engineering process. The above roles should express 
    their deep knowledge during the conversation. Their aim is to play all three roles, simulating 
    the HCOME methodology. The above mentioned roles will interact with each other, asking and 
    answering questions until a valid and comprehensive ontology is created, which covers all 
    the defined requirements below.
  The aim of the ontology is to model all the necessary concepts and their relationships for Search and Rescue (SAR) missions. The scope of the ontology is wildfire incidents. The generated ontology is the following.
START OF ONTOLOGY
@prefix : <http://example.org/sar#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:Incident a owl:Class .
:Wildfire a owl:Class; rdfs:subClassOf :Incident .
:BuildingFire a owl:Class; rdfs:subClassOf :Incident .
:VehicleFire a owl:Class; rdfs:subClassOf :Incident .

:Impact a owl:Class .
:PropertyDamage a owl:Class; rdfs:subClassOf :Impact .
:EnvironmentalImpact a owl:Class; rdfs:subClassOf :Impact .
:HumanCasualty a owl:Class; rdfs:subClassOf :Impact .

:WeatherCondition a owl:Class .
:Temperature a owl:Class; rdfs:subClassOf :WeatherCondition .
:WindSpeed a owl:Class; rdfs:subClassOf :WeatherCondition .
:Humidity a owl:Class; rdfs:subClassOf :WeatherCondition .
:WeatherForecast a owl:Class; rdfs:subClassOf :WeatherCondition .

:SensorData a owl:Class .
:SatelliteData a owl:Class; rdfs:subClassOf :SensorData .
:GroundSensorData a owl:Class; rdfs:subClassOf :SensorData .

:SocialMediaData a owl:Class .
:FirstResponderInput a owl:Class .

:Mission a owl:Class .
:Service a owl:Class .

:AreaBurnt a owl:Class .
:Forest a owl:Class; rdfs:subClassOf :AreaBurnt .
:Swamp a owl:Class; rdfs:subClassOf :AreaBurnt .
:Woodland a owl:Class; rdfs:subClassOf :AreaBurnt .
:CropResidue a owl:Class; rdfs:subClassOf :AreaBurnt .
:Grassland a owl:Class; rdfs:subClassOf :AreaBurnt .

:OtherDisaster a owl:Class .
:Building a owl:Class; rdfs:subClassOf :OtherDisaster .
:Vehicle a owl:Class; rdfs:subClassOf :OtherDisaster .

:Rescue a owl:Class .
:Person a owl:Class; rdfs:subClassOf :Rescue .

:Animal a owl:Class .
:Bird a owl:Class; rdfs:subClassOf :Animal .
:Hive a owl:Class; rdfs:subClassOf :Animal .

:Accident a owl:Class .
:Death a owl:Class; rdfs:subClassOf :Accident .

:PossibleCauseOfFire a owl:Class .
:Physics a owl:Class; rdfs:subClassOf :PossibleCauseOfFire .
:ArsonWithIntent a owl:Class; rdfs:subClassOf :PossibleCauseOfFire .
:ArsonByNegligence a owl:Class; rdfs:subClassOf :PossibleCauseOfFire .

:ForcesInvolved a owl:Class .
:PermanentForce a owl:Class; rdfs:subClassOf :ForcesInvolved .
:SeasonalForce a owl:Class; rdfs:subClassOf :ForcesInvolved .
:VolunteerFirefighter a owl:Class; rdfs:subClassOf :ForcesInvolved .
:ArmedForcePersonnel a owl:Class; rdfs:subClassOf :ForcesInvolved .
:ServicePersonnel a owl:Class; rdfs:subClassOf :ForcesInvolved .
:MunicipalityStaff a owl:Class; rdfs:subClassOf :ForcesInvolved .
:PublicSectorStaff a owl:Class; rdfs:subClassOf :ForcesInvolved .
:ClubMember a owl:Class; rdfs:subClassOf :ForcesInvolved .
:Individual a owl:Class; rdfs:subClassOf :ForcesInvolved .

:InvestmentInstrument a owl:Class .
:FireTruck a owl:Class; rdfs:subClassOf :InvestmentInstrument .
:Tanker a owl:Class; rdfs:subClassOf :InvestmentInstrument .
:FireFightingVehicle a owl:Class; rdfs:subClassOf :InvestmentInstrument .
:Machine a owl:Class; rdfs:subClassOf :InvestmentInstrument .

:AirInvolvement a owl:Class .

:Personnel a owl:Class .
:Firefighter a owl:Class; rdfs:subClassOf :Personnel .
:Paramedic a owl:Class; rdfs:subClassOf :Personnel .

:causesFire a owl:ObjectProperty; rdfs:domain :WeatherCondition; rdfs:range :Incident .
:currentMeasurement a owl:DatatypeProperty; rdfs:domain :WeatherCondition; rdfs:range xsd:float .
:forecastMeasurement a owl:DatatypeProperty; rdfs:domain :WeatherCondition; rdfs:range xsd:float .
:location a owl:DatatypeProperty; rdfs:domain :Incident; rdfs:range xsd:string .
:priority a owl:DatatypeProperty; rdfs:domain :Incident; rdfs:range xsd:string .
:urgency a owl:DatatypeProperty; rdfs:domain :Incident; rdfs:range xsd:string .
:sourceData a owl:ObjectProperty; rdfs:domain :Incident; rdfs:range :SensorData .
:creationDate a owl:DatatypeProperty; rdfs:domain :SensorData; rdfs:range xsd:dateTime .
:smokeClassification a owl:DatatypeProperty; rdfs:domain :Incident; rdfs:range xsd:string .
:vulnerableObjects a owl:DatatypeProperty; rdfs:domain :Incident; rdfs:range xsd:string .
:forestryWorkStatus a owl:DatatypeProperty; rdfs:domain :Incident; rdfs:range xsd:string .
:offeredService a owl:ObjectProperty; rdfs:domain :Service; rdfs:range xsd:string .
:mission a owl:ObjectProperty; rdfs:domain :Service; rdfs:range :Mission .
:missionLocation a owl:DatatypeProperty; rdfs:domain :Mission; rdfs:range xsd:string .
:urgentMissionLocation a owl:DatatypeProperty; rdfs:domain :Mission; rdfs:range xsd:string .
:populationDensity a owl:DatatypeProperty; rdfs:domain :Mission; rdfs:range xsd:float .
:peopleLocation a owl:DatatypeProperty; rdfs:domain :Mission; rdfs:range xsd:string .

:hasImpact a owl:ObjectProperty; rdfs:domain :Incident; rdfs:range :Impact .
:hasWeatherCondition a owl:ObjectProperty; rdfs:domain :Incident; rdfs:range :WeatherCondition .
:hasSensorData a owl:ObjectProperty; rdfs:domain :Incident; rdfs:range :SensorData .
:hasSocialMediaData a owl:ObjectProperty; rdfs:domain :Incident; rdfs:range :SocialMediaData .
:hasFirstResponderInput a owl:ObjectProperty; rdfs:domain :Incident; rdfs:range :FirstResponderInput .
:hasMission a owl:ObjectProperty; rdfs:domain :Incident; rdfs:range :Mission .
:hasService a owl:ObjectProperty; rdfs:domain :Incident; rdfs:range :Service .

# OWL Axioms for expressiveness

:John rdf:type owl:NamedIndividual .
:Person rdf:type owl:Class .
:hasWife rdf:type owl:ObjectProperty .
:hasAge rdf:type owl:DatatypeProperty .

:NarcisticPerson owl:equivalentClass [
  rdf:type owl:Restriction ;
  owl:onProperty :loves ;
  owl:hasSelf "true"^^xsd:boolean
] .

:MyBirthdayGuests owl:equivalentClass [
  rdf:type owl:Class ;
  owl:oneOf (:Bill :John :Mary)
] .

:Orphan owl:equivalentClass [
  rdf:type owl:Restriction ;
  owl:onProperty [ owl:inverseOf :hasChild ] ;
  owl:allValuesFrom :Dead
] .

:John rdf:type [
  rdf:type owl:Restriction ;
  owl:cardinality "5"^^xsd:nonNegativeInteger ;
  owl:onProperty :hasChild
] .The generated ontology is the following.
END OF ONTOLOGY
    For now, your goal is to change the strucutre of the given ontology. Try to make only substantial changes to the structure of the ontology to 
    make it more robust and expressive, adding necessary owl axioms. Try to improve the ontology using the guides you will be given, removing irrelevant concepts 
    (e.g, classes, properties) focusing on making it more well-connected and well-structured in terms of the concepts that already exist.
   
    
During the discussion and design of the ontology you should consider the following additional content. 
    You should follow the above way of thinking-acting-observing, but BEHIND THE SCENES and WITHOUT showing this thinking chain during the discussion and the ontology generation process, as given below
    START OF REACT

    Question: How should a new ontology be created to meet the given aim and scope?

Thought 1: To avoid duplicating existing knowledge, I should first check if there are established ontologies relevant to this domain.

Action 1: Search the web for ontologies related to this domain.

Observation 1: I have found several related ontologies in this area.

Thought 2: To keep the ontology focused and practical, I should only consider the most widely used and currently maintained (live) ontologies.

Action 2: Review the list of existing ontologies and select only those that are widely used and currently maintained.

Observation 2: I now have a refined list of widely used, live ontologies for reference.

Response: The new data property, representing a connection between a class and a literal, was successfully added to the ontology. The owl:DatatypeProperty, rdfs:domain, and rdfs:range axioms were created, and the property was defined as a subproperty of the appropriate existing data property where applicable.

Thought 3: Next, I need the IRIs (Internationalized Resource Identifiers) of these selected ontologies to integrate them effectively.

Action 3: Perform a web search to locate the IRIs of the selected ontologies.

Observation 3: I have obtained the IRIs of the relevant ontologies, which are ready for integration.

Response: I will proceed by reusing these widely adopted, live ontologies in the new ontology, using their respective IRIs and prefixes to ensure compatibility and reusability.

Thought 5: To establish equivalence, I should define the relationship using the owl:equivalentProperty axiom.

Action 5: Define equivalency using the owl:equivalentProperty axiom.

Observation 5: The equivalency relationships have been successfully defined.

Thought 6: I should investigate if the new object property has any inverse relationships with other properties in the ontology.

Action 6: Check for any inverse object properties in the ontology.

Observation 6: There are object properties that are inverses of the new object property.

Thought 7: I should define these inverse relationships using the owl:inverseOf axiom.

Action 7: Apply the owl:inverseOf axiom to establish inverse relationships.
    
    END OF REACT 
   The iterative discussion stops when the given ontology becomes well structured (e.g., related classes grouped under related superclasses), 
    its concepts (e.g., classes) are well connected, and the ontology generally has a high level of expressiveness (using OWL axioms).
    Feel free to use domain knowledge to extend the ontology with classes and properties to make it as comprehensive as possible.
    Present the iterative discussion and the generated ontology in Turtle (TTL) format WITHOUT individuals. 
  